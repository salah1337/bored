{"version":3,"sources":["store/User.js","components/topBar.js","webpack:///./index.js?41f5","styles/main.js","App.js","routes/homeStack.js","assets/img/bg.png","assets/img/video-box-logo.png","screens/home.js","assets/img/chat.png","assets/img/video.png","screens/chat.js","components/VIPModal.js","assets/img/VIP.png","components/ShopModal.js","components/LoginModal.js","components/LoginForm.js","components/RegisterForm.js","components/ForgotPasswordForm.js","components/abutton.js","screens/video.js","store/Video.js","components/ChatList.js","components/VideoContainer.js"],"names":["userStore","user","Object","userCount","makeObservable","this","observable","setUser","action","unsetUser","setUserCount","unsetUserCount","currentUser","computed","getUserCount","topBar","observer","navigation","useState","LoginModalVisible","setLoginModalVisible","VIPModalVisible","setVIPModalVisible","ShopModalVisible","setShopModalVisible","View","style","styles","TouchableOpacity","onPress","goBack","Image","logo","source","require","topBarBtns","topBarBtn","globalStyle","grayBtn","Text","yellowBtn","loginBtn","undefined","username","textWhite","textMd","width","textAlign","textGreen","Modal","modal","visible","ImageBackground","resizeMode","container","closeModal","StyleSheet","create","flex","justifyContent","alignItems","height","margin","flexDirection","padding","marginHorizontal","paddingHorizontal","paddingVertical","ids","registerRootComponent","App","fontSize","RFValue","color","textBold","fontWeight","greenBtn","backgroundColor","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","borderRadius","redBtn","blueBtn","buttonsContainer","buttons","screens","Home","screen","Chat","Video","HomeStack","createStackNavigator","defaultNavigationOptions","headerShown","createAppContainer","module","exports","navigate","btnImage","marginVertical","props","start","state","started","socket","emit","updateMsgs","sendMsg","msg","id","newMsg","from","reset","setState","msgs","text","romStranger","fromServer","fromStranger","io","connect","on","rooms","console","log","JSON","stringify","data","roomId","wrapper","chatBox","FlatList","inverted","renderItem","item","bottomBar","bottomBarBtn","Platform","OS","marginRight","stop","display","chatInput","TextInput","editable","onChangeText","value","onKeyPress","e","nativeEvent","key","chatSend","React","Component","paddingBottom","marginBottom","marginLeft","vip","whyvip","viptext","submitBtn","changeFormTxt","borderBottomColor","borderBottomWidth","shopList","keyExtractor","name","image","listItem","listImage","form","setForm","onFinish","initialValues","Email","Password","api","Formik","onSubmit","values","resetForm","axios","post","email","password","then","response","tocken","catch","error","placeholder","handleChange","input","secureTextEntry","handleSubmit","borderWidth","borderColor","Username","ConfirmPassword","password2","button","componentDidMount","success","newRoom","room","us1","createOffer","remoteStream","newConnection","sdp","pc","setRemoteDescription","RTCSessionDescription","us2","createAnswer","candidate","addIceCandidate","RTCIceCandidate","count","mediaDevices","enumerateDevices","sourceInfos","videoSourceId","i","length","sourceInfo","kind","facing","deviceId","getUserMedia","audio","video","frameRate","facingMode","stream","localStream","showLocal","failure","queue","sleep","sendToPeer","messageType","payload","socketID","refresh","offerToReceiveVideo","offerToReceiveAudio","setLocalDescription","desc","parse","addCandidate","candidates","forEach","close","RTCPeerConnection","iceServers","urls","onicecandidate","oniceconnectionstatechange","onaddstream","addEventListener","event","iceConnectionState","restartIce","addStream","ms","Promise","resolve","setTimeout","localVideo","VideoContainer","mirror","keyy","remoteVideo","videoBox","Button","title","videosDevider","disabled","video1","paddingTop","onSubmitEditing","position","bottom","right","zIndex","videoStore","getLocalStream","getRemoteStream","ChatList","memo","onChange","RTCView","objectFit"],"mappings":"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","file":"static/js/app.d4b151dc.chunk.js","sourcesContent":["import { action, computed, makeObservable, observable } from 'mobx'\nclass User{\n    user = Object\n    userCount = 0\n\n    constructor() {\n        makeObservable(this, {\n            user: observable,\n            setUser: action,\n            unsetUser: action,\n            userCount: observable,\n            setUserCount: action,\n            unsetUserCount: action,\n            currentUser: computed, \n            getUserCount: computed, \n        })\n    }\n\n    setUser(user) {\n        this.user = user\n    }\n\n    unsetUser() {\n        this.user = {}\n    }\n\n    setUserCount(userCount) {\n        this.userCount = userCount\n    }\n\n    unsetUserCount() {\n        this.userCount = 0\n    }\n\n\n    get currentUser() {\n        return this.user\n    }\n\n    get getUserCount() {\n        return this.userCount\n    }\n}\n\nexport const userStore = new User()","import React, { useState } from 'react';\nimport { Text, View, Image, ImageBackground, Button, Platform, Modal } from 'react-native';\nimport StyleSheet from 'react-native-media-query';\nimport VIPModal from './VIPModal';\nimport ShopModal from './ShopModal';\nimport LoginModal from './LoginModal';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { globalStyle } from '../styles/main';\nimport { observer } from 'mobx-react';\nimport { userStore } from '../store/User';\n\nexport default topBar = observer(({ navigation }) => {\n    const backHomePressHandler = () => {\n        navigation.goBack()\n    }\n    const [LoginModalVisible, setLoginModalVisible] = useState(false)\n    const [VIPModalVisible, setVIPModalVisible] = useState(false)\n    const [ShopModalVisible, setShopModalVisible] = useState(false)\n    return (\n        <View style={styles.topBar}>\n\n        <TouchableOpacity onPress={backHomePressHandler}>\n            <Image style={styles.logo} source={require('../assets/img/video-box-logo.png')} />\n        </TouchableOpacity>\n        <View style={styles.topBarBtns}>\n\n            <TouchableOpacity onPress={() => setVIPModalVisible(true)} style={[styles.topBarBtn, globalStyle.grayBtn]}>\n                <Text>VIP</Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity onPress={() => setLoginModalVisible(true)} style={[styles.topBarBtn, globalStyle.yellowBtn, styles.loginBtn]}>\n                <Text>Login</Text>\n                <Text>{userStore.currentUser.user != undefined ? userStore.currentUser.user.username : 'not logged in'}</Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity onPress={() => setShopModalVisible(true)}  style={[styles.topBarBtn, globalStyle.grayBtn]}>\n                <Text>Shop</Text>\n            </TouchableOpacity>\n\n        </View>\n        <Text style={[globalStyle.textWhite, globalStyle.textMd, {width: 250, textAlign: 'right'}]} >Online: <Text style={globalStyle.textGreen}>{userStore.getUserCount}</Text></Text>\n\n        <Modal style={styles.modal} visible={LoginModalVisible}>\n            <ImageBackground resizeMode=\"repeat\" source={require('../assets/img/bg.png')} style={styles.container}>\n                <LoginModal closeModal={() => setLoginModalVisible(false)} />\n\n            </ImageBackground>\n        </Modal>\n\n        <Modal style={styles.modal} visible={VIPModalVisible}>\n            <ImageBackground resizeMode=\"repeat\" source={require('../assets/img/bg.png')} style={styles.container}>\n                <VIPModal closeModal={() => setVIPModalVisible(false)} />\n\n            </ImageBackground>\n        </Modal>\n\n        <Modal style={styles.modal} visible={ShopModalVisible}>\n            <ImageBackground resizeMode=\"repeat\" source={require('../assets/img/bg.png')} style={styles.container}>\n                <ShopModal closeModal={() => setShopModalVisible(false)} />\n\n            </ImageBackground>\n        </Modal>\n\n        </View>\n    )\n})\n\nconst {ids, styles} = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"100%\",\n    },\n    modal: {\n        width: \"100%\",\n        height: \"100%\",\n        margin: 0\n    },  \n    topBar: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        padding: 10,\n        '@media (max-width: 500px)': {\n            flexDirection: 'column'\n        },\n    },\n    topBarBtns: {\n        flexDirection: 'row',\n        alignItems: 'flex-end',\n        justifyContent: 'center',\n        width: 250\n    },\n    topBarBtn: {\n        marginHorizontal: 5,\n        paddingHorizontal: 16,\n        paddingVertical: 6\n    },\n    loginBtn: {\n        paddingHorizontal: 48,\n        paddingVertical: 12\n    }, \n    logo: {\n        height: 100,\n        width: 250,\n        resizeMode: 'contain'\n    },\n})","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import { StyleSheet } from \"react-native\";\nimport { RFPercentage, RFValue } from \"react-native-responsive-fontsize\";\n\nexport const globalStyle = StyleSheet.create({\n    textMd: {\n        fontSize: RFValue(10, 580)\n    },\n    textWhite: {\n        color: '#fff'\n    },  \n    textGreen: {\n        color: 'rgb(5, 233, 5)'\n    },\n    textBold: {\n        fontWeight: \"600\"\n    },\n    greenBtn: {\n        backgroundColor: 'rgb(5, 233, 5)',\n        shadowColor: \"rgb(6, 167, 25)\",\n        shadowOffset: {\n            width: 0,\n            height: 6,\n        },\n        shadowOpacity: 0.37,\n        shadowRadius: 7.49,\n\n        elevation: 12,\n        borderRadius: 2, \n    },\n    redBtn: {\n        backgroundColor: 'rgb(177, 27, 27)',\n        shadowColor: \"rgb(6, 167, 25)\",\n        shadowOffset: {\n            width: 0,\n            height: 6,\n        },\n        shadowOpacity: 0.37,\n        shadowRadius: 7.49,\n\n        elevation: 12,\n        borderRadius: 2, \n    },\n    blueBtn: {\n        backgroundColor: 'rgb(65, 129, 225)',\n        shadowColor: \"rgb(6, 167, 25)\",\n        shadowOffset: {\n            width: 0,\n            height: 6,\n        },\n        shadowOpacity: 0.37,\n        shadowRadius: 7.49,\n\n        elevation: 12,\n        borderRadius: 2, \n    }, \n    yellowBtn: {\n        backgroundColor: 'rgb(255, 255, 0)',\n        shadowColor: \"rgb(147, 169, 2)\",\n        shadowOffset: {\n            width: 0,\n            height: 6,\n        },\n        shadowOpacity: 0.37,\n        shadowRadius: 7.49,\n\n        elevation: 12,\n        borderRadius: 2, \n    },\n    grayBtn: {\n        backgroundColor: 'rgb(182, 182, 182)',\n        shadowColor: \"rgb(138, 138, 138)\",\n        shadowOffset: {\n            width: 0,\n            height: 6,\n        },\n        shadowOpacity: 0.37,\n        shadowRadius: 7.49,\n\n        elevation: 12,\n        borderRadius: 2, \n    }\n\n})","import { StatusBar } from 'expo-status-bar';\nimport { observer } from 'mobx-react';\nimport React from 'react';\nimport { StyleSheet, Text, View, Image, ImageBackground, Button } from 'react-native';\nimport Navigator from './routes/homeStack'\n\nexport default observer(function App() {\n  \n  return (\n    <Navigator  style={styles.container}/>\n  );\n})\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  logo: {\n    height: 500,\n    width: 500,\n    resizeMode: 'contain'\n  },\n  buttonsContainer: {\n    flexDirection: 'row',\n  },\n  buttons: {\n    margin: 10,\n    padding: 10 \n  }\n});\n","import { createStackNavigator } from \"react-navigation-stack\";\nimport { createAppContainer } from \"react-navigation\";\nimport Home from '../screens/home'\nimport Chat from '../screens/chat'\nimport Video from '../screens/video'\n\nconst screens = {\n\n    Home: {\n        screen: Home\n    },\n    Chat: {\n        screen: Chat\n    },\n    Video: {\n        screen: Video\n    }\n}\n\nconst HomeStack = createStackNavigator(screens, {\n        defaultNavigationOptions: {\n            headerShown: false\n        }\n    });\n\nexport default createAppContainer(HomeStack);","module.exports = __webpack_public_path__ + \"static/media/bg.134c3a4a.png\";","module.exports = __webpack_public_path__ + \"static/media/video-box-logo.4f375b15.png\";","import React from 'react';\nimport { StyleSheet, Text, View, Image, ImageBackground, Button } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { globalStyle } from '../styles/main';\n\nexport default function Home({ navigation }) {\n    const chatPressHandler = () => {\n        navigation.navigate('Chat')\n    }\n    const videoPressHandler = () => {\n        navigation.navigate('Video')\n    }\n    return (\n        <ImageBackground resizeMode=\"repeat\" source={require('../assets/img/bg.png')} style={styles.container}>\n\n        <Image style={styles.logo} source={require('../assets/img/video-box-logo.png')} />\n        <Text style={[globalStyle.textMd, globalStyle.textWhite]}>U Bored?</Text>\n        \n        <View style={styles.buttonsContainer}>\n          <TouchableOpacity onPress={chatPressHandler} style={[globalStyle.greenBtn, styles.buttons]}>\n          <Image style={styles.btnImage} source={require('../assets/img/chat.png')} />\n            <Text style={[globalStyle.textWhite, globalStyle.textBold]}>Chat</Text>\n          </TouchableOpacity>\n          <TouchableOpacity onPress={videoPressHandler} style={[globalStyle.greenBtn, styles.buttons]}>\n          <Image style={styles.btnImage} source={require('../assets/img/video.png')} />\n            <Text style={[globalStyle.textWhite, globalStyle.textBold]}>Video</Text>\n          </TouchableOpacity>\n        </View>\n        \n        \n        </ImageBackground>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    logo: {\n      height: 200,\n      width: 500,\n      resizeMode: 'contain'\n    },\n    buttonsContainer: {\n      flexDirection: 'row',\n      marginVertical: 20\n    },\n    buttons: {\n      margin: 10,\n      padding: 10,\n      height: 200,\n      width: 200,\n      justifyContent: 'center', \n      alignItems: 'center',\n      borderRadius: 4\n    },\n    btnImage: {\n      height: 100,\n      width: 100,\n      resizeMode: 'contain'\n\n    }\n  });\n  ","module.exports = __webpack_public_path__ + \"static/media/chat.97227cfe.png\";","module.exports = __webpack_public_path__ + \"static/media/video.4a4ea4de.png\";","import React, { useState } from \"react\";\nimport {\n  Text,\n  View,\n  Image,\n  ImageBackground,\n  Button,\n  Platform,\n} from \"react-native\";\nimport StyleSheet from \"react-native-media-query\";\nimport { FlatList, TextInput, TouchableOpacity } from \"react-native\";\nimport TopBar from \"../components/topBar\";\nimport Abutton from \"../components/abutton\";\nimport { globalStyle } from \"../styles/main\";\nimport { API_URL, DEV } from \"@env\";\nimport io from \"socket.io-client\";\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      msg: \"\",\n      msgs: [],\n      started: false,\n    };\n  }\n  componentDidMount() {\n    this.setState({\n      msgs: [\n        {\n          text: \"Welcome to text chat, click start to begin!\",\n          fromServer: true,\n        },\n      ],\n    });\n\n    this.socket = io.connect(\"https://boredbackend.herokuapp.com/chat\");\n\n    this.socket.on(\"rooms\", (rooms) => {\n      console.log(\"rooms: \" + JSON.stringify(rooms));\n    });\n\n    this.socket.on(\"newMsg\", (data) => {\n      this.updateMsgs(data.msg, \"stranger\");\n    });\n\n    this.socket.on(\"foundStranger\", () => {\n      this.updateMsgs(\"Found New Stranger, Say Hi!\", \"server\", true);\n    });\n\n    this.socket.on(\"strangerLeft\", () => {\n      this.updateMsgs(\"Stranger Left, looking for new room...\", \"server\");\n    });\n\n    this.socket.on(\"joinRoom\", (roomId) => {\n      this.socket.emit(\"joinRoom\", roomId);\n    });\n\n    this.socket.on(\"queueUp\", () => {\n      this.socket.emit(\"queueUp\");\n    });\n\n    this.socket.on(\"addedToQueue\", () => {\n      this.updateMsgs(\"No Stranger Found, waiting on queue...\", \"server\");\n    });\n  }\n  start = () => {\n    this.state.started = true;\n    this.socket.emit(\"start\");\n    this.updateMsgs(\"Looking for stranger...\", \"server\", true);\n  };\n  sendMsg = () => {\n    this.socket.emit(\"newMsg\", { msg: this.state.msg, id: this.socket.id });\n    this.updateMsgs(this.state.msg);\n  };\n  componentWillUnmount() {\n    this.socket.emit(\"leftChat\");\n    // this.socket.disconnect()\n  }\n  stop() {\n    this.setState({ started: false });\n    this.socket.emit(\"unQueue\");\n    this.updateMsgs(\"Left queue, press start to rejoin!\", \"server\", true);\n  }\n  updateMsgs = (newMsg, from, reset) => {\n    if (newMsg) {\n      if (reset) {\n        this.setState({\n          msgs: [\n            {\n              text: newMsg,\n              romStranger: from == \"stranger\",\n              fromServer: from == \"server\",\n            },\n          ],\n          msg: \"\",\n        });\n      } else {\n        this.setState({\n          msgs: [\n            {\n              text: newMsg,\n              fromStranger: from == \"stranger\",\n              fromServer: from == \"server\",\n            },\n            ...this.state.msgs,\n          ],\n          msg: \"\",\n        });\n      }\n    }\n  };\n  render() {\n    const { msg, msgs, started } = this.state;\n    return (\n      <ImageBackground\n        resizeMode=\"repeat\"\n        source={require(\"../assets/img/bg.png\")}\n        style={styles.container}\n      >\n        <View style={styles.wrapper}>\n          <TopBar navigation={this.props.navigation} />\n\n          <View style={styles.chatBox}>\n            <FlatList\n              inverted={-1}\n              data={msgs}\n              style={{ padding: 10 }}\n              renderItem={({ item }) => (\n                <Text>\n                  {item.fromStranger ? (\n                    <Text style={{ color: \"#ff0000\", fontWeight: \"bold\" }}>\n                      Stranger:{\" \"}\n                    </Text>\n                  ) : item.fromServer ? (\n                    <Text style={{ color: \"#000\", fontWeight: \"bold\" }}>\n                      Server:{\" \"}\n                    </Text>\n                  ) : (\n                    <Text style={{ color: \"#0000ff\", fontWeight: \"bold\" }}>\n                      You:{\" \"}\n                    </Text>\n                  )}\n                  {item.text}\n                </Text>\n              )}\n            />\n          </View>\n\n          <View style={styles.bottomBar}>\n            <TouchableOpacity\n              onPress={this.start}\n              style={[\n                styles.bottomBarBtn,\n                {\n                  width: this.state.started\n                    ? Platform.OS == \"ios\" || \"android\"\n                      ? 60\n                      : 100\n                    : Platform.OS == \"ios\" || \"android\"\n                    ? 80\n                    : 200,\n                  marginRight: 8,\n                },\n              ]}\n            >\n              <View\n                style={[\n                  {\n                    flex: 1,\n                    width: \"100%\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                  },\n                  this.state.started\n                    ? globalStyle.blueBtn\n                    : globalStyle.greenBtn,\n                ]}\n              >\n                <Text style={[globalStyle.textMd, globalStyle.textWhite]}>\n                  {this.state.started ? \"Skip\" : \"Start\"}\n                </Text>\n              </View>\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={() => this.stop()}\n              style={[\n                styles.bottomBarBtn,\n                {\n                  width: this.state.started\n                    ? Platform.OS == \"ios\" || \"android\"\n                      ? 60\n                      : 100\n                    : Platform.OS == \"ios\" || \"android\"\n                    ? 80\n                    : 200,\n                },\n                this.state.started ? { display: \"flex\" } : { display: \"none\" },\n              ]}\n            >\n              <View\n                style={[\n                  {\n                    flex: 1,\n                    width: \"100%\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                  },\n                  globalStyle.redBtn,\n                ]}\n              >\n                <Text style={[globalStyle.textMd, globalStyle.textWhite]}>\n                  Stop\n                </Text>\n              </View>\n            </TouchableOpacity>\n\n            <View style={styles.chatInput}>\n              <TextInput\n                editable={started}\n                onChangeText={(text) => this.setState({ msg: text })}\n                value={msg}\n                style={{ flex: 1 }}\n                onKeyPress={(e) => {\n                  if (e.nativeEvent.key == \"Enter\") this.sendMsg(msg);\n                }}\n              />\n            </View>\n            <TouchableOpacity\n              onPress={() => this.sendMsg(msg)}\n              style={[styles.chatSend, globalStyle.grayBtn]}\n            >\n              <Text>Send</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </ImageBackground>\n    );\n  }\n}\nexport default Chat;\nconst { ids, styles } = StyleSheet.create({\n  wrapper: {\n    width: \"90%\",\n    height: \"100%\",\n    paddingBottom: 15,\n  },\n  container: {\n    alignItems: \"center\",\n    flex: 1,\n  },\n  buttonsContainer: {\n    flexDirection: \"row\",\n  },\n  buttons: {\n    margin: 10,\n    padding: 10,\n  },\n  chatBox: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    borderRadius: 4,\n    marginBottom: 10,\n  },\n  bottomBar: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    height: \"20%\",\n  },\n  bottomBarBtn: {\n    height: \"100%\",\n    width: 200,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    \"@media (max-width: 500px)\": {\n      width: 100,\n    },\n  },\n  chatInput: {\n    height: \"100%\",\n    flex: 1,\n    backgroundColor: \"#fff\",\n    marginLeft: 10,\n    borderRadius: 2,\n  },\n  chatSend: {\n    height: \"100%\",\n    width: 100,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    \"@media (max-width: 500px)\": {\n      width: 50,\n    },\n  },\n});\n","import { Image, StyleSheet, Text, View } from \"react-native\";\n\nimport { Ionicons } from '@expo/vector-icons'; \nimport { globalStyle } from \"../styles/main\";\nimport { TouchableOpacity } from \"react-native\";\nimport React from \"react\";\n\nexport default function VIPModal({ closeModal }) {\n    return (\n        <View style={styles.container}>\n            <TouchableOpacity onPress={closeModal} >\n                <Text style={[globalStyle.textWhite]}>close</Text>\n            </TouchableOpacity>\n            {/* <Ionicons name=\"close\" size={32} color=\"white\" onPress={closeModal} /> */}\n\n            <Image style={styles.vip} source={require('../assets/img/VIP.png')} />\n\n            <View style={styles.whyvip}>\n                <Text style={[globalStyle.textWhite, globalStyle.textMd, globalStyle.textBold, styles.viptext]}>Faster Connection</Text>\n                <Text style={[globalStyle.textWhite, globalStyle.textMd, globalStyle.textBold, styles.viptext]}>Access to VIP coins</Text>\n                <Text style={[globalStyle.textWhite, globalStyle.textMd, globalStyle.textBold, styles.viptext]}>Upload your own icons</Text>\n                <Text style={[globalStyle.textWhite, globalStyle.textMd, globalStyle.textBold, styles.viptext]}>Colored chat alias</Text>\n            </View>\n\n            <Image style={styles.logo} source={require('../assets/img/video-box-logo.png')} />\n\n\n            <TouchableOpacity style={[globalStyle.greenBtn, styles.submitBtn]}>\n                <Text style={[globalStyle.textMd, globalStyle.textWhite]}>BUY</Text>\n            </TouchableOpacity>\n            <Text style={[globalStyle.textMd, globalStyle.textWhite, globalStyle.textBold]}>Price: <Text style={globalStyle.textGreen}>1337$</Text></Text>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"100%\",\n    },\n    logo: {\n        height: 150,\n        width: 300,\n        resizeMode: 'contain'\n    },\n    vip: {\n        height: 50,\n        width: 50,\n        resizeMode: 'contain'\n    },\n    viptext: {\n        marginVertical: 5\n    }, \n    whyvip: {\n        backgroundColor: '#3b3b3b',\n        padding: 20,\n        borderRadius: 4\n    },\n    changeFormTxt: {\n        margin: 5\n    },\n    submitBtn: {\n        justifyContent: \"center\",\n        textAlign: \"center\",\n        paddingHorizontal: 80,\n        paddingVertical: 10 \n    }\n})","module.exports = __webpack_public_path__ + \"static/media/VIP.07483ac8.png\";","import { Image, StyleSheet, Text, View } from \"react-native\";\n\nimport { Ionicons } from '@expo/vector-icons'; \nimport { globalStyle } from \"../styles/main\";\nimport { FlatList } from \"react-native\";\nimport React from \"react\";\nimport { TouchableOpacity } from \"react-native\";\n\nexport default function ShopModal({ closeModal }) {\n    const shopItems = [\n        { name: 'item', image: 'video-box-logo', id: 1},\n        { name: 'item', image: 'video-box-logo', id: 2},\n        { name: 'item', image: 'video-box-logo', id: 3},\n        { name: 'item', image: 'video-box-logo', id: 4},\n        { name: 'item', image: 'video-box-logo', id: 5},\n        { name: 'item', image: 'video-box-logo', id: 6},\n    ]\n    return (\n        <View style={styles.container}>\n                        <TouchableOpacity onPress={closeModal} >\n                <Text style={[globalStyle.textWhite]}>close</Text>\n            </TouchableOpacity>\n            {/* <Ionicons name=\"close\" size={32} color=\"white\" onPress={closeModal} /> */}\n            <Image style={styles.logo} source={require('../assets/img/video-box-logo.png')} />\n\n\n            <View style={{backgroundColor:'#969696', borderRadius: 4}}>\n\n            <View style={{flexDirection: \"row\", width: 300, borderBottomColor: '#232323', borderBottomWidth: 2, padding: 10}}>\n                <Text style={[globalStyle.textWhite, globalStyle.textMd, globalStyle.textBold, {flex: 3}]}>Name</Text>\n                <Text style={[globalStyle.textWhite, globalStyle.textMd, globalStyle.textBold, {flex: 1}]}>Price</Text>\n            </View>\n\n            <View style={styles.shopList}>\n\n            <FlatList \n                keyExtractor={item => item.id}\n                data={shopItems}\n                renderItem={({item}) => (\n                    <View style={[styles.listItem, {flexDirection: \"row\", width: 300, padding: 10, borderBottomColor: '#232323', borderBottomWidth: 1}]}>\n                    <Text style={[globalStyle.textWhite, globalStyle.textMd, globalStyle.textBold, {flex: 3}]}>{item.name}\n                    <View style={{width: 69, height: 30}}><Image style={styles.listImage} source={require('../assets/img/video-box-logo.png')} /></View>\n                    </Text>\n                    <Text style={[globalStyle.textWhite, globalStyle.textMd, globalStyle.textBold, {flex: 1}]}>Price</Text>\n\n                </View>\n                )}\n            />\n\n            </View>\n\n            </View>\n\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    shopList: {\n        height: 300\n    },\n    listItem: {\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n    listImage: {\n        flex: 1,\n        width: '100%',\n        height: '100%',\n        resizeMode: 'contain'\n    },\n    container: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"100%\",\n    },\n    logo: {\n        height: 150,\n        width: 300,\n        resizeMode: 'contain'\n    },\n    changeFormTxt: {\n    }\n})","import { Button, Image, ImageBackground, StyleSheet, View, Text } from \"react-native\";\n\nimport { Ionicons } from '@expo/vector-icons'; \nimport LoginForm from \"./LoginForm\";\nimport RegisterForm from \"./RegisterForm\";\nimport ForgotPasswordForm from \"./ForgotPasswordForm\";\nimport React, { useState } from \"react\";\nimport { TouchableOpacity } from \"react-native\";\nimport { globalStyle } from \"../styles/main\";\n\nexport default function LoginModal({ closeModal }) {\n    const [form,  setForm] = useState('login')\n\n\n    return (\n        <ImageBackground resizeMode=\"repeat\" source={require('../assets/img/bg.png')} style={styles.container}>\n            <TouchableOpacity onPress={closeModal} >\n                <Text style={[globalStyle.textWhite]}>close</Text>\n            </TouchableOpacity>\n            {/* <Ionicons name=\"close\" size={32} color=\"white\" onPress={closeModal} /> */}\n            <Image style={styles.logo} source={require('../assets/img/video-box-logo.png')} />\n            \n            { form == 'login' && \n            <LoginForm onFinish={closeModal}/> }\n            { form == 'register' && \n            <RegisterForm/> }\n            { form == 'forgotPassword' && \n            <ForgotPasswordForm/> }\n\n            { form == 'login' && \n            <View>\n                <TouchableOpacity onPress={() => setForm('register')}><Text style={[styles.changeFormTxt, globalStyle.textGreen]}>Don't have an account?</Text></TouchableOpacity>\n                <TouchableOpacity onPress={() => setForm('forgotPassword')}><Text style={[styles.changeFormTxt, globalStyle.textGreen]}>Password Forgotten?</Text></TouchableOpacity>\n            </View>\n            }\n            { form == 'register' && \n            <TouchableOpacity onPress={() => setForm('login')}><Text style={[styles.changeFormTxt, globalStyle.textGreen]}>Already have an account?</Text></TouchableOpacity>}\n            { form == 'forgotPassword' && \n            <View>\n                <TouchableOpacity onPress={() => setForm('register')}><Text style={[styles.changeFormTxt, globalStyle.textGreen]}>Don't have an account?</Text></TouchableOpacity>\n                <TouchableOpacity onPress={() => setForm('login')}><Text style={[styles.changeFormTxt, globalStyle.textGreen]}>Back to login</Text></TouchableOpacity>\n            </View> }\n            \n \n        </ImageBackground>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"100%\",\n    },\n    logo: {\n        height: 150,\n        width: 300,\n        resizeMode: 'contain'\n    },\n    changeFormTxt: {\n        margin: 5\n    }\n})","import axios from \"axios\";\nimport { Formik } from \"formik\";\nimport React from \"react\";\nimport { StyleSheet, View, Text, Platform } from \"react-native\";\nimport { TextInput, TouchableOpacity } from \"react-native\";\nimport { globalStyle } from \"../styles/main\";\nimport {API_URL, DEV} from \"@env\"\nimport {userStore} from '../store/User'\n\nexport default function LoginForm({onFinish}) {\n    const initialValues = {Email: '', Password: ''}\n    let api = 'https://b446-196-70-69-208.ngrok.io'\n    if ( DEV && Platform.OS == 'android') api = 'http://10.0.2.2:5000'\n    console.log(DEV)\n    return (\n        <View style={styles.container}>\n            <Formik\n                initialValues={initialValues}\n                onSubmit={(values, { resetForm }) => {\n                    axios.post(`${api}/users/login`, {\n                        email: values.Email, \n                        password: values.Password,\n                    }).then(function (response) {\n                        userStore.setUser({user: response.data.user, tocken: response.data.tocken})\n                        console.log(userStore.currentUser.user.username);\n                        resetForm({values: initialValues})\n                        onFinish()\n                      })\n                      .catch(function (error) {\n                        console.log(error);\n                      });\n                }}\n            >\n                {(props) => (\n\n                    <View>\n                        <TextInput \n                            placeholder='Email'\n                            onChangeText={props.handleChange('Email')}\n                            value={props.values.Email}\n                            style={styles.input}\n                        />\n\n                        <TextInput \n                            secureTextEntry={true}\n                            placeholder='Password'\n                            onChangeText={props.handleChange('Password')}\n                            value={props.values.Password}\n                            style={styles.input}\n                        />\n\n                        <TouchableOpacity onPress={props.handleSubmit} style={[globalStyle.greenBtn, styles.submitBtn]}>\n                        <Text style={[globalStyle.textMd, globalStyle.textWhite]}>Login</Text>\n                        </TouchableOpacity>\n\n                    </View>\n                    \n\n                )}\n            </Formik>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        width: 300,\n    },\n    input: {\n        borderWidth: 1,\n        borderColor: '#ddd',\n        padding: 10,\n        fontSize: 18,\n        borderRadius: 6,\n        marginVertical: 15,\n        backgroundColor: '#fff',\n    },\n    submitBtn: {\n        justifyContent: \"center\",\n        textAlign: \"center\",\n        padding: 10\n    }\n})","import { Formik } from \"formik\";\nimport React from \"react\";\nimport { StyleSheet, View, Text, Platform } from \"react-native\";\nimport { TextInput, TouchableOpacity } from \"react-native\";\nimport { globalStyle } from \"../styles/main\";\nimport {API_URL, DEV} from \"@env\"\nimport axios from \"axios\";\n\n\nexport default function RegisterForm() {\n    const initialValues = {Email: '', Username: '', Password: '', ConfirmPassword: ''}\n    let api = API_URL\n    if ( DEV && Platform.OS == 'android') api = 'http://10.0.2.2:5000'\n    console.log(DEV)\n    return (\n        <View style={styles.container}>\n            <Formik\n                initialValues={initialValues}\n                onSubmit={(values, { resetForm }) => {\n                    axios.post(`${api}/users/register`, {\n                        email: values.Email, \n                        username: values.Username,\n                        password: values.Password,\n                        password2: values.ConfirmPassword,\n                    }).then(function (response) {\n                        console.log(response);\n                        resetForm({values: initialValues})\n                      })\n                      .catch(function (error) {\n                        console.log(error);\n                      });\n                }}\n            >\n                {(props) => (\n\n                    <View>\n                        <TextInput \n                            placeholder='Email'\n                            onChangeText={props.handleChange('Email')}\n                            value={props.values.Email}\n                            style={styles.input}\n                        />\n                        \n                        <TextInput \n                            placeholder='Username'\n                            onChangeText={props.handleChange('Username')}\n                            value={props.values.Username}\n                            style={styles.input}\n                        />\n\n                        <TextInput \n                            secureTextEntry={true}\n                            placeholder='Password'\n                            onChangeText={props.handleChange('Password')}\n                            value={props.values.Password}\n                            style={styles.input}\n                        />\n                        \n                        <TextInput \n                            secureTextEntry={true}\n                            placeholder='ConfirmPassword'\n                            onChangeText={props.handleChange('ConfirmPassword')}\n                            value={props.values.ConfirmPassword}\n                            style={styles.input}\n                        />\n\n                        <TouchableOpacity onPress={props.handleSubmit} style={[globalStyle.greenBtn, styles.submitBtn]}>\n                        <Text style={[globalStyle.textMd, globalStyle.textWhite]}>Register</Text>\n                        </TouchableOpacity>\n\n                    </View>\n                    \n\n                )}\n            </Formik>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        width: 300 \n    },\n    input: {\n        borderWidth: 1,\n        borderColor: '#ddd',\n        padding: 10,\n        fontSize: 18,\n        borderRadius: 6,\n        marginVertical: 15,\n        backgroundColor: '#fff',\n    },\n    submitBtn: {\n        justifyContent: \"center\",\n        textAlign: \"center\",\n        padding: 10\n    }\n})","import { Formik } from \"formik\";\nimport React from \"react\";\nimport { StyleSheet, View, Text } from \"react-native\";\nimport { TextInput, TouchableOpacity } from \"react-native\";\nimport { globalStyle } from \"../styles/main\";\n\n\n\nexport default function ForgotPasswordForm() {\n    return (\n        <View style={styles.container}>\n            <Formik\n                initialValues={{Email: '', Password: ''}}\n                onSubmit={(values) => {\n\n                }}\n            >\n                {(props) => (\n\n                    <View>\n                        <TextInput \n                            placeholder='Email'\n                            onChangeText={props.handleChange('Email')}\n                            value={props.values.Email}\n                            style={styles.input}\n                        />\n\n                        <TouchableOpacity style={[globalStyle.greenBtn, styles.submitBtn]}>\n                        <Text style={[globalStyle.textMd, globalStyle.textWhite]}>Login</Text>\n                        </TouchableOpacity>\n\n                    </View>\n                    \n\n                )}\n            </Formik>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        width: 300 \n    },\n    input: {\n        borderWidth: 1,\n        borderColor: '#ddd',\n        padding: 10,\n        fontSize: 18,\n        borderRadius: 6,\n        marginVertical: 15,\n        backgroundColor: '#fff',\n    },\n    submitBtn: {\n        justifyContent: \"center\",\n        textAlign: \"center\",\n        padding: 10\n    }\n})","import { StyleSheet, Text, View } from \"react-native\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\n\nexport default function abutton({ text, onPress, color }) {\n    return (\n        <TouchableOpacity style={styles.button, {backgroundColor: color}} onPress={onPress}>\n            <Text style={{color: '#fff'}}>{ text }</Text>\n        </TouchableOpacity>\n    )\n}\n\nconst styles = StyleSheet.create({\n    button: {\n        borderRadius: 4,\n        backgroundColor: 'rgb(5, 233, 5)',\n        justifyContent: \"center\",\n        height: '100%'\n    },\n\n})","import React, { useState } from \"react\";\nimport {\n  Text,\n  View,\n  Image,\n  ImageBackground,\n  Button,\n  FlatList,\n  Platform,\n} from \"react-native\";\nimport StyleSheet from \"react-native-media-query\";\nimport {\n  TextInput,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n} from \"react-native-gesture-handler\";\nimport TopBar from \"../components/topBar\";\nimport { globalStyle } from \"../styles/main\";\nimport io from \"socket.io-client\";\n\nimport {\n  RTCPeerConnection,\n  RTCIceCandidate,\n  RTCSessionDescription,\n  RTCView,\n  MediaStream,\n  MediaStreamTrack,\n  mediaDevices,\n  registerGlobals,\n} from \"react-native-webrtc-web-shim\";\nimport { videoStore } from \"../store/Video\";\nimport { render } from \"react-dom\";\nimport { ChatList } from \"../components/ChatList\";\nimport { VideoContainer } from \"../components/VideoContainer\";\nimport { userStore } from \"../store/User\";\nimport MovableView from \"react-native-movable-view\";\n\nclass Video extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      localStream: null,\n      remoteStream: null,\n      showLocal: false,\n      msg: \"\",\n      msgs: [],\n      room: { us1: null, us2: null, id: null },\n      started: false,\n    };\n    this.sdp;\n    this.socket = null;\n    this.candidates = [];\n  }\n\n  componentDidMount = () => {\n    this.socket = io.connect(\"https://boredbackend.herokuapp.com/chat\");\n\n    this.socket.on(\"connection-success\", (success) => {\n      console.log(success);\n    });\n\n    this.socket.on(\"newMsg\", (data) => {\n      this.updateMsgs(data.msg, \"stranger\");\n    });\n\n    this.socket.on(\"foundStranger\", (newRoom) => {\n      this.updateMsgs(\"Found New Stranger, Say Hi!\", \"server\", true);\n      this.setState({ room: newRoom });\n      if (newRoom.us1 == this.socket.id) this.createOffer();\n    });\n    this.socket.on(\"strangerLeft\", () => {\n      this.setState({ remoteStream: null });\n      this.updateMsgs(\"Stranger Left, looking for new room...\", \"server\");\n      this.newConnection();\n    });\n\n    this.socket.on(\"joinRoom\", (roomId) => {\n      this.socket.emit(\"joinRoom\", roomId);\n    });\n\n    this.socket.on(\"queueUp\", () => {\n      this.socket.emit(\"queueUp\");\n    });\n\n    this.socket.on(\"refresh\", () => {\n      this.newConnection();\n      if (this.state.room.us1 == this.socket.id) this.createOffer();\n    });\n\n    this.socket.on(\"addedToQueue\", () => {\n      this.updateMsgs(\"No Stranger Found, waiting on queue...\", \"server\");\n    });\n\n    this.socket.on(\"offerOrAnswer\", (sdp) => {\n      // set sdp as remote description\n      if (sdp != null) console.log(\"got sdp\");\n      if (this.socket.id == this.state.room.us1) console.log(\"i am s1\");\n\n      this.pc.setRemoteDescription(new RTCSessionDescription(sdp));\n      if (this.state.room.us2 == this.socket.id) {\n        this.createAnswer();\n        console.log(\"i am s2\");\n      }\n    });\n\n    this.socket.on(\"candidate\", (candidate) => {\n      // console.log('From Peer... ', JSON.stringify(candidate))\n      // this.candidates = [...this.candidates, candidate]\n      this.pc.addIceCandidate(new RTCIceCandidate(candidate));\n    });\n\n    this.socket.on(\"count\", (count) => {\n      userStore.setUserCount(count);\n    });\n\n    let isFront = true;\n\n    mediaDevices.enumerateDevices().then((sourceInfos) => {\n      console.log(\"source Info: \" + sourceInfos);\n      let videoSourceId;\n      for (let i = 0; i < sourceInfos.length; i++) {\n        const sourceInfo = sourceInfos[i];\n        if (\n          sourceInfo.kind == \"videoinput\" &&\n          sourceInfo.facing == (isFront ? \"front\" : \"environment\")\n        ) {\n          videoSourceId = sourceInfo.deviceId;\n        }\n      }\n\n      mediaDevices\n        .getUserMedia({\n          audio: true,\n          video: {\n            width: 640,\n            height: 480,\n            frameRate: 30,\n            facingMode: isFront ? \"user\" : \"environment\",\n            deviceId: videoSourceId,\n          },\n        })\n        .then((stream) => {\n          // Got stream!\n          this.setState({\n            localStream: stream,\n            showLocal: true,\n          });\n          console.log(this.state.showLocal);\n          // success\n        })\n        .catch((error) => {\n          failure;\n        });\n\n      // mediaDevices.getUserMedia()\n      // .then(success)\n      // .catch(failure);\n    });\n  };\n  newConnection() {\n    this.setState({ remoteStream: null });\n    if (this.pc) this.pc.close();\n    const pc_config = {\n      iceServers: [\n        // {\n        //   urls: 'stun:[STUN_IP]:[PORT]',\n        //   'credentials': '[YOR CREDENTIALS]',\n        //   'username': '[USERNAME]'\n        // },\n        {\n          urls: \"stun:stun.l.google.com:19302\",\n        },\n      ],\n    };\n    this.pc = new RTCPeerConnection(pc_config);\n    this.pc.onicecandidate = (e) => {\n      // send the candidates to the remote peer\n      // see addCandidate below to be triggered on the remote peer\n      if (e.candidate) {\n        // console.log(JSON.stringify(e.candidate))\n        this.sendToPeer(\"candidate\", e.candidate);\n      }\n    };\n\n    // triggered when there is a change in connection state\n    this.pc.oniceconnectionstatechange = (e) => {\n      console.log(e);\n    };\n\n    this.pc.onaddstream = (e) => {\n      // this.remoteVideoref.current.srcObject = e.streams[0]\n      console.log(\"updated remote stream\");\n      this.setState({\n        remoteStream: e.stream,\n      });\n    };\n\n    this.pc.addEventListener(\"iceconnectionstatechange\", (event) => {\n      if (this.pc.iceConnectionState === \"failed\") {\n        /* possibly reconfigure the connection in some way here */\n        /* then request ICE restart */\n        this.pc.restartIce();\n      }\n    });\n    this.pc.addStream(this.state.localStream);\n\n    const failure = (e) => {\n      console.log(\"getUserMedia Error: \", e);\n    };\n  }\n  sleep(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n  queue = () => {\n    this.socket.emit(\"start\");\n    this.updateMsgs(\"Looking for stranger...\", \"server\", true);\n  };\n  start = () => {\n    // if(!this.pc)\n    this.state.started = true;\n    this.newConnection();\n    this.sleep(2000).then(() => {\n      this.queue();\n      //// code\n    });\n  };\n  sendMsg = () => {\n    this.socket.emit(\"newMsg\", { msg: this.state.msg, id: this.socket.id });\n    this.updateMsgs(this.state.msg);\n  };\n  updateMsgs = (newMsg, from, reset) => {\n    if (newMsg) {\n      if (reset) {\n        this.setState({\n          msgs: [\n            {\n              text: newMsg,\n              romStranger: from == \"stranger\",\n              fromServer: from == \"server\",\n            },\n          ],\n          msg: \"\",\n        });\n      } else {\n        this.setState({\n          msgs: [\n            {\n              text: newMsg,\n              fromStranger: from == \"stranger\",\n              fromServer: from == \"server\",\n            },\n            ...this.state.msgs,\n          ],\n          msg: \"\",\n        });\n      }\n    }\n  };\n  stop() {\n    this.setState({ started: false, remoteStream: null });\n    this.socket.emit(\"unQueue\");\n    this.updateMsgs(\"Left queue, press start to rejoin!\", \"server\", true);\n  }\n  getLocalStream() {\n    let isFront = true;\n    mediaDevices.enumerateDevices().then((sourceInfos) => {\n      console.log(\"source Info: \" + sourceInfos);\n      let videoSourceId;\n      for (let i = 0; i < sourceInfos.length; i++) {\n        const sourceInfo = sourceInfos[i];\n        if (\n          sourceInfo.kind == \"videoinput\" &&\n          sourceInfo.facing == (isFront ? \"front\" : \"environment\")\n        ) {\n          videoSourceId = sourceInfo.deviceId;\n        }\n      }\n\n      mediaDevices\n        .getUserMedia({\n          audio: true,\n          video: {\n            width: 640,\n            height: 480,\n            frameRate: 30,\n            facingMode: isFront ? \"user\" : \"environment\",\n            deviceId: videoSourceId,\n          },\n        })\n        .then((stream) => {\n          // Got stream!\n          this.setState({\n            localStream: stream,\n            showLocal: true,\n          });\n          console.log(this.state.showLocal);\n          // success\n        })\n        .catch((error) => {\n          failure;\n        });\n\n      // mediaDevices.getUserMedia()\n      // .then(success)\n      // .catch(failure);\n    });\n  }\n  componentWillUnmount() {\n    this.socket.emit(\"leftChat\");\n\n    // this.socket.disconnect()\n  }\n  sendToPeer = (messageType, payload) => {\n    this.socket.emit(messageType, {\n      socketID: this.socket.id,\n      payload,\n    });\n  };\n\n  refresh = () => {\n    this.socket.emit(\"refresh\", this.state.room);\n  };\n\n  createOffer = () => {\n    console.log(\"Offer\");\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createOffer\n    // initiates the creation of SDP\n    this.pc\n      .createOffer({ offerToReceiveVideo: 1, offerToReceiveAudio: 1 })\n      .then((sdp) => {\n        // console.log(JSON.stringify(sdp))\n\n        // set offer sdp as local description\n        this.pc.setLocalDescription(sdp);\n\n        this.sendToPeer(\"offerOrAnswer\", sdp);\n      });\n  };\n\n  createAnswer = () => {\n    console.log(\"Answer\");\n    this.pc\n      .createAnswer({ offerToReceiveVideo: 1, offerToReceiveAudio: 1 })\n      .then((sdp) => {\n        // console.log(JSON.stringify(sdp))\n\n        // set answer sdp as local description\n        this.pc.setLocalDescription(sdp);\n\n        this.sendToPeer(\"offerOrAnswer\", sdp);\n      });\n  };\n\n  setRemoteDescription = () => {\n    // retrieve and parse the SDP copied from the remote peer\n    const desc = JSON.parse(this.sdp);\n\n    // set sdp as remote description\n    this.pc.setRemoteDescription(new RTCSessionDescription(desc));\n  };\n\n  addCandidate = () => {\n    // retrieve and parse the Candidate copied from the remote peer\n    // const candidate = JSON.parse(this.textref.value)\n    // console.log('Adding candidate:', candidate)\n\n    // add the candidate to the peer connection\n    // this.pc.addIceCandidate(new RTCIceCandidate(candidate))\n\n    this.candidates.forEach((candidate) => {\n      console.log(JSON.stringify(candidate));\n      this.pc.addIceCandidate(new RTCIceCandidate(candidate));\n    });\n  };\n\n  render() {\n    const { localStream, remoteStream, showLocal, msg, msgs, started } =\n      this.state;\n\n    const localVideo = showLocal ? (\n      // <RTCView\n      //   style={{flex: 1}}\n      //   stream={localStream}\n      //   objectFit='contain'\n      // />\n      <VideoContainer stream={localStream} mirror={false} keyy={2} />\n    ) : (\n      <View style={{ padding: 15 }}>\n        <Text style={{ fontSize: 22, textAlign: \"center\", color: \"black\" }}>\n          Please Allow Camera Permission and click start ...\n        </Text>\n      </View>\n    );\n\n    const remoteVideo = remoteStream ? (\n      <VideoContainer keyy={1} mirror={true} stream={remoteStream} />\n    ) : (\n      <View style={{ padding: 15 }}>\n        <Text style={{ fontSize: 22, textAlign: \"center\", color: \"black\" }}>\n          Waiting for Peer connection ...\n        </Text>\n      </View>\n    );\n\n    return (\n      <ImageBackground\n        resizeMode=\"repeat\"\n        source={require(\"../assets/img/bg.png\")}\n        style={styles.container}\n      >\n        <View style={styles.wrapper}>\n          <TopBar navigation={this.props.navigation} />\n\n          <View style={styles.videoBox}>\n            <View style={styles.video}>\n              {remoteVideo}\n              <Button title=\"refresh\" onPress={() => this.refresh()} />\n            </View>\n            <View style={styles.videosDevider}></View>\n            <MovableView\n              disabled={!(Platform.OS == \"ios\" || \"android\")}\n              style={[styles.video, styles.video1]}\n            >\n              {localVideo}\n            </MovableView>\n          </View>\n\n          <View style={styles.bottomBar}>\n            <TouchableOpacity\n              onPress={this.start}\n              style={[\n                styles.bottomBarBtn,\n                {\n                  width: this.state.started\n                    ? Platform.OS == \"ios\" || \"android\"\n                      ? 60\n                      : 100\n                    : Platform.OS == \"ios\" || \"android\"\n                    ? 80\n                    : 200,\n                  marginRight: 8,\n                },\n              ]}\n            >\n              <View\n                style={[\n                  {\n                    flex: 1,\n                    width: \"100%\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                  },\n                  this.state.started\n                    ? globalStyle.blueBtn\n                    : globalStyle.greenBtn,\n                ]}\n              >\n                <Text style={[globalStyle.textMd, globalStyle.textWhite]}>\n                  {this.state.started ? \"Skip\" : \"Start\"}\n                </Text>\n              </View>\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={() => this.stop()}\n              style={[\n                styles.bottomBarBtn,\n                {\n                  width: this.state.started\n                    ? Platform.OS == \"ios\" || \"android\"\n                      ? 60\n                      : 100\n                    : Platform.OS == \"ios\" || \"android\"\n                    ? 80\n                    : 200,\n                },\n                this.state.started ? { display: \"flex\" } : { display: \"none\" },\n              ]}\n            >\n              <View\n                style={[\n                  {\n                    flex: 1,\n                    width: \"100%\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                  },\n                  globalStyle.redBtn,\n                ]}\n              >\n                <Text style={[globalStyle.textMd, globalStyle.textWhite]}>\n                  Stop\n                </Text>\n              </View>\n            </TouchableOpacity>\n\n            <View style={styles.chatInput}>\n              {/* <ChatList msgs={msgs} /> */}\n              <FlatList\n                inverted={-1}\n                data={msgs}\n                style={{ paddingHorizontal: 10, paddingTop: 10, flex: 1 }}\n                renderItem={({ item }) => (\n                  <Text>\n                    {item.fromStranger ? (\n                      <Text style={{ color: \"#ff0000\", fontWeight: \"bold\" }}>\n                        Stranger:{\" \"}\n                      </Text>\n                    ) : item.fromServer ? (\n                      <Text style={{ color: \"#000\", fontWeight: \"bold\" }}>\n                        Server:{\" \"}\n                      </Text>\n                    ) : (\n                      <Text style={{ color: \"#0000ff\", fontWeight: \"bold\" }}>\n                        You:{\" \"}\n                      </Text>\n                    )}\n                    {item.text}\n                  </Text>\n                )}\n              />\n              <TextInput\n                editable={started}\n                onChangeText={(text) => this.setState({ msg: text })}\n                value={msg}\n                style={{\n                  backgroundColor: \"rgb(182, 182, 182)\",\n                  height: 35,\n                  paddingHorizontal: 4,\n                }}\n                // onKeyPress={(e) => {\n                //   if (e.nativeEvent.key == \"Enter\") this.sendMsg(msg);\n                // }}\n                onSubmitEditing={() => this.sendMsg(msg)}\n              />\n            </View>\n            <TouchableOpacity\n              onPress={() => this.sendMsg(msg)}\n              style={[styles.chatSend, globalStyle.grayBtn]}\n            >\n              <Text>Send</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </ImageBackground>\n    );\n  }\n}\nexport default Video;\nconst { ids, styles } = StyleSheet.create({\n  wrapper: {\n    width: \"90%\",\n    height: \"100%\",\n    paddingBottom: 15,\n  },\n  container: {\n    alignItems: \"center\",\n    flex: 1,\n  },\n  buttonsContainer: {\n    flexDirection: \"row\",\n  },\n  buttons: {\n    margin: 10,\n    padding: 10,\n  },\n  videoBox: {\n    flex: 1,\n    marginBottom: 10,\n    flexDirection: \"row\",\n    // position: 'relative',\n    \"@media (max-width: 500px)\": {},\n  },\n  video: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    borderRadius: 4,\n  },\n  video1: {\n    \"@media (max-width: 500px)\": {\n      position: \"absolute\",\n      bottom: 0,\n      right: 0,\n      height: \"30%\",\n      width: \"30%\",\n      backgroundColor: \"#232323\",\n    },\n    zIndex: 2,\n  },\n  videosDevider: {\n    paddingHorizontal: 10,\n    \"@media (max-width: 500px)\": {\n      display: \"none\",\n    },\n  },\n  bottomBar: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    height: 100,\n  },\n  chatInput: {\n    height: \"100%\",\n    flex: 1,\n    backgroundColor: \"#fff\",\n    marginLeft: 10,\n    borderRadius: 2,\n  },\n  chatSend: {\n    height: \"100%\",\n    width: 100,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    \"@media (max-width: 500px)\": {\n      width: 50,\n    },\n  },\n  bottomBarBtn: {\n    height: \"100%\",\n    width: 200,\n    \"@media (max-width: 500px)\": {\n      width: 100,\n    },\n  },\n});\n","import { action, computed, makeObservable, observable } from 'mobx'\nclass Video{\n    localStream = null\n    remoteStream = null\n\n    constructor() {\n        makeObservable(this, {\n            localStream: observable,\n            remoteStream: observable,\n            getLocalStream: computed,\n            getRemoteStream: computed\n        })\n    }\n\n    setLocalStream(stream) {\n        this.localStream = stream\n    }\n\n    setRemoteStream(stream) {\n        this.remoteStream = stream\n    }\n\n    unsetLocalStream() {\n        this.localStream = null\n    }\n\n    unsetRemoteStream() {\n        this.remoteStream = null\n    }\n\n    get getLocalStream() {\n        return this.localStream\n    }\n\n    get getRemoteStream() {\n        return this.remoteStream\n    }\n}\n\nexport const videoStore = new Video()","import React, { useState } from \"react\";\nimport { FlatList, StyleSheet, Text, View } from \"react-native\";\nimport { TextInput, TouchableOpacity } from \"react-native-gesture-handler\";\n\n\nexport const ChatList = React.memo(({ msgs, msg, newMsg, onChange }) => {\n    return (\n        <View>\n            <FlatList\n                data={msgs}\n                style={{padding: 10}}\n                renderItem={({ item }) => (\n                    <Text>\n                        {item.fromStranger ? \n                        <Text style={{color: '#ff0000', fontWeight: 'bold'}}>Stranger: </Text> \n                        : item.fromServer ? <Text style={{color: '#000', fontWeight: 'bold'}}>Server: </Text> \n                        : <Text style={{color: '#0000ff', fontWeight: 'bold'}}>You: </Text>}\n                        {item.text}\n                        \n                    </Text>\n                )}\n            />\n            {/* <TextInput \n                onChangeText={(text) => onChange(text)}\n                value={msg}\n                style={{flex: 1}}\n                onKeyPress={(e) => {if(e.nativeEvent.key == 'Enter') newMsg(msg)}}\n            />       */}\n        </View>\n    )\n})\n\nconst styles = StyleSheet.create({\n    button: {\n        borderRadius: 4,\n        backgroundColor: 'rgb(5, 233, 5)',\n        justifyContent: \"center\",\n        height: '100%'\n    },\n\n})","import React from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { RTCView } from \"react-native-webrtc-web-shim\";\n\n\nexport const VideoContainer = React.memo(({ stream, mirror, keyy }) => {\n    return (\n        <RTCView\n        style={{flex: 1}}\n        stream={stream}\n        mirror={mirror}\n        key={keyy}\n        objectFit='contain'\n      />\n    )\n})\n\nconst styles = StyleSheet.create({\n    button: {\n        borderRadius: 4,\n        backgroundColor: 'rgb(5, 233, 5)',\n        justifyContent: \"center\",\n        height: '100%'\n    },\n\n})"],"sourceRoot":""}